name: "Common Code Checks"

on:
  workflow_call:
    secrets:
      workflow_github_token:
        required: true
        description: "GitHub token for workflow"

permissions:
  contents: read

env:
  FORCE_COLOR: 1

jobs:
  check-markdown-links:
    name: Check Markdown links
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # to create PR review comments
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Check Markdown links
        uses: UmbrellaDocs/action-linkspector@874d01cae9fd488e3077b08952093235bd626977 # v1.3.7
        with:
          github_token: ${{ secrets.workflow_github_token }}
          config_file: .github/tool-configurations/.linkspector.yml
          reporter: github-pr-review
          fail_on_error: true
          filter_mode: nofilter
          show_stats: true

  check-justfile-format:
    name: Check Justfile Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3.0.0
      - name: Check Justfile Format
        run: just format-check

  lefthook-validate:
    name: Lefthook Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@3259c6206f993105e3a61b142c2d97bf4b9ef83d # v7.1.0
      - name: Run Lefthook Validate
        run: uvx lefthook validate

  pinact-check:
    name: Pinact Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Check actions are pinned (with config)
        if: ${{ hashFiles('.github/tool-configurations/pinact.yml') != '' }}
        uses: suzuki-shunsuke/pinact-action@49cbd6acd0dbab6a6be2585d1dbdaa43b4410133 # v1.0.0
        with:
          skip_push: "true"
        env:
          PINACT_CONFIG: .github/tool-configurations/pinact.yml
      - name: Check actions are pinned (without config)
        if: ${{ hashFiles('.github/tool-configurations/pinact.yml') == '' }}
        uses: suzuki-shunsuke/pinact-action@49cbd6acd0dbab6a6be2585d1dbdaa43b4410133 # v1.0.0
        with:
          skip_push: "true"

  run-zizmor:
    name: Check GitHub Actions with zizmor
    runs-on: ubuntu-latest
    permissions:
      actions: read # to read actions
      security-events: write # to create secret scanning alerts
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Run zizmor ðŸŒˆ
        uses: zizmorcore/zizmor-action@e673c3917a1aef3c65c972347ed84ccd013ecda4 # v0.2.0
        with:
          persona: auditor
          version: 1.14.2

  run-actionlint:
    name: Check GitHub Actions with Actionlint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Run Actionlint
        uses: docker://rhysd/actionlint:1.7.8 # zizmor: ignore[unpinned-uses]
        with:
          args: -color

  run-grype:
    name: Check for Vulnerabilities with Grype
    runs-on: ubuntu-latest
    permissions:
      security-events: write # to create secret scanning alerts
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Scan current project
        id: scan
        uses: anchore/scan-action@f6601287cdb1efc985d6b765bbf99cb4c0ac29d8 # v7.0.0
        with:
          path: "."
        continue-on-error: true
      - name: Upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@f443b600d91635bebf5b0d9ebc620189c0d6fba5 # v4.30.8
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Scan current project
        uses: anchore/scan-action@f6601287cdb1efc985d6b765bbf99cb4c0ac29d8 # v7.0.0
        with:
          path: "."

  run-gitleaks:
    name: Check for Secrets with Gitleaks
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # for annotations
      security-events: write # to create secret scanning alerts
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@ff98106e4c7b2bc287b24eaf42907196329070c7 # v2.3.9
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GITLEAKS_ENABLE_UPLOAD_ARTIFACT: "true"
          GITLEAKS_NOTIFY_USER_LIST: "@JackPlowman"
      - name: Upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@f443b600d91635bebf5b0d9ebc620189c0d6fba5 # v4.30.8
        with:
          sarif_file: results.sarif

  run-trufflehog:
    name: Check for Secrets with TruffleHog
    runs-on: ubuntu-latest
    permissions:
      security-events: write # to create secret scanning alerts
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Secret Scanning
        uses: trufflesecurity/trufflehog@466da5b0bb161144f6afca9afe5d57975828c410 # v3.90.8
        with:
          extra_args: --results=verified,unknown

  run-editorconfig-checker:
    name: Check File Formats with EditorConfig Checker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Run EditorConfig Checker
        uses: docker://mstruebing/editorconfig-checker:v3.4.1 # zizmor: ignore[unpinned-uses]
        with:
          args: editorconfig-checker -color -format=github-actions

  run-yamllint:
    name: "Check YAML Files with Yamllint"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: "Yamllint"
        uses: karancode/yamllint-github-action@4052d365f09b8d34eb552c363d1141fd60e2aeb2 # v3.0.0
        with:
          yamllint_file_or_dir: "."
          yamllint_config_filepath: ".github/tool-configurations/.yaml-lint.yml"
          yamllint_strict: true
          yamllint_comment: true
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.workflow_github_token }}

  run-markdownlint:
    name: "Check Markdown Files with Markdownlint"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Run Markdownlint
        uses: DavidAnson/markdownlint-cli2-action@992badcdf24e3b8eb7e87ff9287fe931bcb00c6e # v20.0.0
        with:
          config: ".github/tool-configurations/.markdownlint-cli2.jsonc"
          globs: |
            README
            *.md
            **/*.md

  run-prettier:
    name: "Check Code Formatting with Prettier"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup Node.js environment
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
      - name: Install Prettier
        run: npm install -g prettier@3.6.2
      - name: Set up Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3.0.0
      - name: Check Code Formatting with Prettier
        run: just prettier-check

  run-trivy:
    name: "Check Vulnerabilities, Secrets, Misconfigurations, and Licenses with Trivy"
    runs-on: ubuntu-latest
    permissions:
      security-events: write # to create secret scanning alerts
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        with:
          scan-type: "fs"
          scan-ref: "."
          trivy-config: .github/tool-configurations/trivy.yml
          format: "sarif"
          output: "trivy-results.sarif"
      - name: Upload Trivy SARIF report
        uses: github/codeql-action/upload-sarif@f443b600d91635bebf5b0d9ebc620189c0d6fba5 # v4.30.8
        with:
          sarif_file: trivy-results.sarif
